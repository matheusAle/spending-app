type Wallet {
    _id: String!
    name: String!
    isCard: Boolean!
    isDebit: Boolean
    isCredit: Boolean
    availableAmount: Float
    creditLimit: Float
    invoiceClosesOn: Int
    createdAt: String
    updatedAt: String
}

input WalletInput {
    name: String!
    isCard: Boolean!
    isDebit: Boolean
    isCredit: Boolean
    availableAmount: Float
    creditLimit: Float
    invoiceClosesOn: Int
}

type Query {
    wallets: [Wallet] @auth
    wallet(_id: String!): Wallet @auth
}

type Mutation {
    createWallet(wallet: WalletInput!): Wallet @auth
    updateWallet(_id: String!, wallet: WalletInput!): Wallet @auth
    deleteWallet(_id: String!): Boolean @auth
}
